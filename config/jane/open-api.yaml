openapi: 3.0.1
info:
  title: ExtraHop Reveal(x) 360 API
  description: ''
  version: 8.6.0
externalDocs:
  description: Find out more about Swagger
  url: https://docs.extrahop.com/current/rx360-rest-api
servers:
  - url: https://{customerId}.api.cloud.extrahop.com
    variables:
      customerId:
        default: demo
        description: Customer ID provided by ExtraHop
tags:
  - name: activitymap
  - name: alert
  - name: analysispriority
  - name: appliance
  - name: application
  - name: bundle
  - name: dashboard
    description: Dashboards are built-in or customized views of your ExtraHop metrics information.
  - name: detection
    description: The Detections class enables you to retrieve detections that have been identified by the ExtraHop system.
  - name: device
    description: Devices are objects on your network that have been identified and classified by your ExtraHop system.
  - name: devicegroup
    description: Device groups can be either static or dynamic.
  - name: exclusioninterval
  - name: metrics
  - name: network
    description: Networks are correlated to the network interface card that receives input from all of the objects identified by the ExtraHop system.
  - name: networklocality
  - name: observation
    description: An observation associates the IP address of a device on the ExtraHop system with an IP address outside of your network.
  - name: packetsearch
  - name: pairing
  - name: report
  - name: software
  - name: tag
  - name: threatcollection
  - name: trigger
  - name: vlan
    description: Virtual LANs are logical groupings of traffic or devices on the network.
  - name: watchlist
security:
  - oauth:
      - auth
paths:
  /api/v1/activitymaps:
    get:
      tags:
        - activitymap
      summary: Retrieve all activity maps
      operationId: getActivityMaps
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityMap'
  /api/v1/activitymaps/{id}:
    get:
      tags:
        - activitymap
      summary: Retrieve all activity maps
      operationId: getActivityMap
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityMap'
  /api/v1/appliances:
    get:
      tags:
        - appliance
      summary: Retrieve all remote ExtraHop appliances connected to the local appliance.
      operationId: getAppliances
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appliance'
  /api/v1/appliances/{id}:
    get:
      tags:
        - appliance
      summary: Retrieve a specific remote ExtraHop appliance connected to the local appliance.
      operationId: getAppliance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appliance'
  /api/v1/applications:
    get:
      tags:
        - application
      summary: Retrieve all applications that were active within a specific timeframe.
      operationId: getApplications
      parameters:
        - name: active_from
          in: query
          schema:
            type: integer
        - name: active_until
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: search_type
          in: query
          schema:
            type: string
            enum:
              - any
              - name
              - node
              - discovery_id
              - extrahop_id
        - name: value
          in: query
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
    post:
      tags:
        - application
      summary: Create a new application.
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        200:
          description: Success
  /api/v1/applications/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - application
      summary: Retreive a specific application.
      operationId: getApplication
      parameters:
        - name: include_criteria
          in: query
          schema:
            type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
    patch:
      tags:
        - application
      summary: Update an existing application.
      operationId: updateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        200:
          description: Success
  /api/v1/applications/{id}/activity:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - application
      summary: Retrieve all activity for a specific application
      operationId: getApplicationActivity
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationActivity'
  /api/v1/dashboards:
    get:
      tags:
        - dashboard
      summary: Retrieve all dashboards
      operationId: getDashboards
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dashboard'
  /api/v1/dashboards/{id}:
    get:
      tags:
        - dashboard
      summary: Retrieve a specific dashboard
      operationId: getDashboard
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        404:
          $ref: '#/components/responses/NotFound'
  /api/v1/detections:
    get:
      tags:
        - detection
      summary: Retrieve all detections
      operationId: getDetections
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Detection'
  /api/v1/detections/{id}:
    parameters:
      - name: id
        in: path
        description: ID of detection
        required: true
        schema:
          type: integer
    get:
      tags:
        - detection
      summary: Retrieve a specific detection
      operationId: getDetection
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detection'
        404:
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - detection
      summary: Update a detection.
      operationId: updateDetection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detection'
      responses:
        200:
          description: Success
  /ap1/v1/detections/{id}/notes:
    parameters:
      - name: id
        in: path
        description: ID of detection to retrieve
        required: true
        schema:
          type: integer
    get:
      tags:
        - detection
      summary: Retrieve the notes for a given detection.
      operationId: getDetectionNotes
      responses:
        200:
          description: Success
    put:
      tags:
        - detection
      summary: Create or replace notes for a given detection.
      operationId: updateDetectionNotes
      responses:
        200:
          description: Success
    delete:
      tags:
        - detection
      summary: Delete the notes for a given detection.
      operationId: deleteDetectionNotes
      responses:
        200:
          description: Success
  /api/v1/detections/formats:
    get:
      tags:
        - detection
      summary: Retrieve all detection formats
      operationId: getDetectionFormats
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetectionFormat'
    post:
      tags:
        - detection
      summary: Create a new detection format.
      operationId: createDetectionFormat
      responses:
        200:
          description: Success
    patch:
      tags:
        - detection
      summary: Update a specific detection format
      operationId: updateDetectionFormat
      responses:
        200:
          description: Success
  /api/v1/detections/formats/{id}:
    delete:
      tags:
        - detection
      summary: Delete a specific detection format.
      operationId: deleteDetectionFormat
      parameters:
        - name: id
          in: path
          description: ID of detection format to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
  /api/v1/detections/rules/hiding:
    get:
      tags:
        - detection
      summary: Retrieve all detection hiding rules.
      operationId: getDetectionRulesHiding
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetectionRulesHiding'
    post:
      tags:
        - detection
      summary: Create a new detection hiding rule.
      operationId: createDetectionHidingRule
      responses:
        200:
          description: Success
  /api/v1/detections/rules/hiding/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags:
        - detection
      summary: Delete a detection hiding rule.
      operationId: deleteDetectionHidingRule
      responses:
        200:
          description: Success
    patch:
      tags:
        - detection
      summary: Update a detection hiding rule.
      operationId: updateDetectionHidingRule
      responses:
        200:
          description: Success
  /ap1/v1/detections/search:
    post:
      tags:
        - detection
      summary: Retrieve detections that match the specified search criteria.
      operationId: searchDetections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionSearch'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Detection'
        404:
          $ref: '#/components/responses/NotFound'
  /ap1/v1/detections/tickets:
    patch:
      tags:
        - detection
      summary: Update a ticket associated with detections.
      operationId: updateDetectionTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionTicket'
      responses:
        200:
          description: Success
  /api/v1/devicegroups:
    get:
      tags:
        - devicegroup
      summary: Retrieve all device groups
      operationId: getDeviceGroups
      parameters:
        - name: since
          description: Only return device groups that were modified after this time, expressed in milliseconds since the epoch.
          in: query
          schema:
            type: integer
        - name: name
          description: The Regex search value to filter the device groups by name.
          in: query
          schema:
            type: string
        - name: type
          description: Only return device groups of the specified type
          in: query
          schema:
            type: string
            enum:
              - user_created
              - built_in
              - all
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceGroup'
  /api/v1/devicegroups/{id}/devices:
    get:
      tags:
        - devicegroup
      summary: Retrieve all devices in the device group that are active within a specific time window.
      operationId: getDeviceGroupDevices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: active_from
          in: query
          schema:
            type: number
        - name: active_until
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
        - name: offset
          in: query
          schema:
            type: number
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /api/v1/devices:
    get:
      tags:
        - device
      summary: Retrieve all devices that were active within a specific time period.
      operationId: getDevices
      parameters:
        - name: active_from
          in: query
          schema:
            type: integer
        - name: active_until
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: search_type
          in: query
          schema:
            type: string
            enum:
              - any
              - name
              - discovery_id
              - ip_address
              - mac_address
              - vendor
              - type
              - tag
              - activity
              - node
              - vlan
              - discover_time
        - name: value
          in: query
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /api/v1/devices/search:
    post:
      tags:
        - device
      summary: Retrieve all devices that match specific criteria.
      operationId: searchDevices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSearch'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  /api/v1/devices/{id}:
    parameters:
      - name: id
        in: path
        description: ID of device to retrieve
        required: true
        schema:
          type: integer
    get:
      tags:
        - device
      summary: Retrieve a specific device
      operationId: getDevice
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
    patch:
      tags:
        - device
      summary: Update an existing device
      operationId: updateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        200:
          description: Success
  /api/v1/devices/{id}/dnsnames:
    get:
      tags:
        - device
      summary: Retrieve all DNS names that are associated with a specific device.
      operationId: getDeviceDnsNames
      parameters:
        - name: id
          in: path
          description: ID of device to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsNameResponse'
  /api/v1/devices/{id}/ipaddrs:
    get:
      tags:
        - device
      summary: Retrieve all IP addresses that were associated with a specific device within a given time period.
      operationId: getDeviceIpAddrs
      parameters:
        - name: id
          in: path
          description: ID of device to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpAddressResponse'
  /api/v1/devices/{id}/software:
    get:
      tags:
        - device
      summary: Get all identified software on device
      operationId: getDeviceSoftware
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: from
          description: Returns software that was observed on the device after the specified date, expressed in milliseconds since the epoch.
          in: query
          schema:
            type: integer
        - name: until
          description: Returns software that was observed on the device before the specified date, expressed in milliseconds since the epoch.
          in: query
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Software'
  /api/v1/metrics:
    post:
      tags:
        - metrics
      summary: Perform a metric query.
      operationId: getMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricResponse'
  /api/v1/metrics/total:
    post:
      tags:
        - metrics
      summary: Perform a metric query for total values.
      operationId: getMetricTotals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricResponse'
  /api/v1/networks:
    get:
      tags:
        - network
      summary: Retrieve all networks
      operationId: getNetworks
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Network'
  /api/v1/networks/{id}:
    get:
      tags:
        - network
      summary: Retrieve specific network
      operationId: getNetwork
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
  /api/v1/observations/associatedipaddrs:
    post:
      tags:
        - observation
      summary: Add an observation to create an association between device IP addresses.
      operationId: addDeviceIpAddrObservation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  type: string
                  description: The source of the observations
                observations:
                  type: object
                  properties:
                    ipaddr:
                      type: string
                      description: The device IP address observed by the ExtraHop system.
                    associated_ipaddr:
                      type: string
                      description: The associated IP address.
                    timestamp:
                      type: integer
                      description: The time that the observation was created by the source, expressed in milliseconds since the epoch.
      responses:
        200:
          description: Success
  /api/v1/software:
    get:
      tags:
        - software
      summary: Retrieve software observed by the ExtraHop system.
      operationId: getAllSoftware
      parameters:
        - name: software_type
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: version
          in: query
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Software'
  /api/v1/software/{id}:
    get:
      tags:
        - software
      summary: Retrieve software observed by the ExtraHop system by ID.
      operationId: getSoftware
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
  /api/v1/tags:
    get:
      tags:
        - tag
      summary: Retrieve all tags.
      operationId: getTags
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
    post:
      tags:
        - tag
      summary: Create a a new tag.
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        200:
          description: Success
  /ap1/v1/tags/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - tag
      summary: Retrieve a specific tag.
      operationId: getTag
      responses:
        200:
          description: Success
    patch:
      tags:
        - tag
      summary: Apply updates to a specific tag.
      operationId: updateTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        200:
          description: Success
    delete:
      tags:
        - tag
      summary: Delete a specific tag.
      operationId: deleteTag
      responses:
        200:
          description: Success
  /api/v1/tags/{id}/devices:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - tag
      summary: Retrieve all devices that are assigned to a specific tag.
      operationId: getDevicesWithTag
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
    post:
      tags:
        - tag
      summary: Assign and unassign specific tag to devices
      operationId: updateDeviceTags
      responses:
        200:
          description: Success
  /api/v1/tags/{id}/devices/{deviceId}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
    post:
      tags:
        - tag
      summary: Assign a device to a specific tag
      operationId: assignDeviceToTag
      responses:
        200:
          description: Success
    delete:
      tags:
        - tag
      summary: Unassign a device from a specific tag.
      operationId: unassignDeviceFromTag
      responses:
        200:
          description: Success
  /api/v1/triggers:
    get:
      tags:
        - trigger
      summary: Retrieve all Triggers
      operationId: getTriggers
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trigger'
    post:
      tags:
        - trigger
      summary: Create a new trigger
      operationId: createTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        200:
          description: Success
  /api/v1/triggers/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - trigger
      summary: Retrieve a specific trigger by unique identifier.
      operationId: getTrigger
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
    delete:
      tags:
        - trigger
      summary: Delete a specific identifier.
      operationId: deleteTrigger
      responses:
        200:
          description: Success
    patch:
      tags:
        - trigger
      summary: Update an existing trigger.
      operationId: updateTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        204:
          description: Success
  /api/v1/triggers/{id}/devicegroups:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - trigger
      summary: Retrieve all device groups that are assigned to a specific trigger.
      operationId: getTriggerDeviceGroups
      responses:
        200:
          description: Success
    post:
      tags:
        - trigger
      summary: Assign and unassign a specific trigger to device groups.
      operationId: updateTriggerDeviceGroups
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assign:
                  type: string
                  nullable: true
                unassign:
                  type: string
                  nullable: true
      responses:
        200:
          description: Success
  /api/v1/triggers/{id}/devicegroups/{child-id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: child-id
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags:
        - trigger
      summary: Unassign a device group from a specific trigger.
      operationId: deleteTriggerDeviceGroup
      responses:
        200:
          description: Success
    post:
      tags:
        - trigger
      summary: Assign a device group to a specific trigger.
      operationId: addTriggerDeviceGroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assign:
                  type: string
                  nullable: true
                unassign:
                  type: string
                  nullable: true
      responses:
        200:
          description: Success
  /api/v1/triggers/{id}/devices:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - trigger
      summary: Retrieve all devices that are assigned to a specific trigger.
      operationId: getTriggerDevices
      responses:
        200:
          description: Success
    post:
      tags:
        - trigger
      summary: Assign and unassign a specific trigger to devices.
      operationId: updateTriggerDevices
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assign:
                  type: string
                  nullable: true
                unassign:
                  type: string
                  nullable: true
      responses:
        200:
          description: Success
  /api/v1/triggers/{id}/devices/{child-id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: child-id
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags:
        - trigger
      summary: Unassign a device from a specific trigger.
      operationId: deleteTriggerDevice
      responses:
        200:
          description: Success
    post:
      tags:
        - trigger
      summary: Assign a device to a specific trigger.
      operationId: addTriggerDevice
      responses:
        200:
          description: Success
  /api/v1/watchlist/devices:
    get:
      tags:
        - watchlist
      summary: Retrieve all devices that are in the watchlist.
      operationId: getWatchlistDevices
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
    post:
      tags:
        - watchlist
      summary: Add or remove devices from the watchlist.
      operationId: updateWatchlistDevices
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assign:
                  type: string
                  nullable: true
                unassign:
                  type: string
                  nullable: true
      responses:
        200:
          description: Success
  /api/v1/watchlist/device/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags:
        - watchlist
      summary: Remove a device from the watchlist.
      operationId: deleteWatchlistDevice
      responses:
        200:
          description: Success
    post:
      tags:
        - watchlist
      summary: Add a device to the watchlist.
      operationId: addWatchlistDevice
      responses:
        200:
          description: Success
  /api/v1/vlans:
    get:
      tags:
        - vlan
      summary: Retrieve all VLANs
      operationId: getVlans
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vlan'
  /api/v1/vlans/{id}:
    get:
      tags:
        - vlan
      summary: Retrieve a specific VLAN
      operationId: getVlan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vlan'
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        type:
          type: string
        detail:
          type: string
          nullable: true
    ActivityMap:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        mode:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        rights:
          type: array
          items:
            type: string
        short_code:
          type: string
          nullable: true
        show_alert_status:
          type: boolean
        walks:
          type: array
          items:
            type: string
        weighting:
          type: string
          nullable: true
        mod_time:
          type: integer
    Appliance:
      type: object
      properties:
        id:
          type: integer
        add_time:
          type: integer
          nullable: true
        advanced_analysis_capacity:
          type: boolean
        analysis_levels_managed:
          type: boolean
        connection_type:
          type: string
        data_access:
          type: boolean
        display_name:
          type: string
        fingerprint:
          type: string
        firmware_version:
          type: string
        hostname:
          type: string
        license_status:
          type: string
        managed_by_local:
          type: boolean
        manages_local:
          type: boolean
        nickname:
          type: string
        platform:
          type: string
        status_message:
          type: string
        sync_time:
          type: string
          format: date-time
        total_capacity:
          type: integer
        uuid:
          type: string
    Application:
      type: object
      properties:
        id:
          type: integer
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationCriteria'
        description:
          type: string
        discovery_id:
          type: string
        display_name:
          type: string
        extrahop_id:
          type: string
        mod_time:
          type: integer
        node_id:
          type: integer
        user_mod_time:
          type: integer
    ApplicationActivity:
      type: object
      properties:
        id:
          type: integer
        application_id:
          type: integer
        from_time:
          type: integer
        until_time:
          type: integer
        stat_name:
          type: string
        mod_time:
          type: integer
    ApplicationCriteria:
      type: object
      properties:
        protocol_default:
          type: string
          enum:
            - any
            - none
        sources:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSource'
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationProtocol'
    ApplicationProtocol:
      type: object
      additionalProperties:
        type: string
    ApplicationSource:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - device
            - device_group
    Dashboard:
      type: object
      properties:
        id:
          type: integer
        author:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        rights:
          type: array
          items:
            type: string
        short_code:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        mod_time:
          type: integer
    Detection:
      type: object
      properties:
        id:
          type: integer
        appliance_id:
          type: integer
        assignee:
          type: string
          nullable: true
        categories:
          type: array
          items:
            type: string
        description:
          type: string
        end_time:
          type: integer
        is_user_created:
          type: boolean
        mitre_tactics:
          type: array
          items:
            $ref: '#/components/schemas/DetectionMitreTactic'
        mitre_techniques:
          type: array
          items:
            $ref: '#/components/schemas/DetectionMitreTechnique'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/DetectionParticipant'
        properties:
          type: array
          items:
            type: string
        resolution:
          type: string
          nullable: true
        risk_score:
          type: integer
        status:
          type: string
          nullable: true
        ticket_id:
          type: string
          nullable: true
        ticket_url:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        start_time:
          type: integer
          nullable: true
        update_time:
          type: integer
          nullable: true
    DetectionFormat:
      type: object
      properties:
        author:
          type: string
          nullable: true
        display_name:
          type: string
          nullable: true
        is_user_created:
          type: boolean
        mitre_categories:
          type: array
          items:
            type: string
        properties:
          type: array
          items:
            type: string
        type:
          type: string
          nullable: true
    DetectionMitreTactic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
    DetectionMitreTechnique:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        legacy_ids:
          type: array
          items:
            type: string
    DetectionParticipant:
      type: object
      properties:
        id:
          type: integer
        object_type:
          type: string
        object_id:
          type: integer
        role:
          type: string
        external:
          type: boolean
    DetectionRulesHiding:
      type: object
      properties:
        id:
          type: string
        author:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        detection_type:
          type: string
          nullable: true
        detections_hidden:
          type: integer
        enabled:
          type: boolean
        hide_past_detections:
          type: boolean
        offender:
          type: array
          items:
            type: string
        victim:
          type: array
          items:
            type: string
        expiration:
          type: integer
          nullable: true
        create_time:
          type: integer
          nullable: true
    DetectionSearch:
      type: object
      properties:
        filter:
          type: object
          properties:
            category:
              nullable: true
              type: string
            assignee:
              type: array
              nullable: true
              items:
                type: string
            ticket_id:
              type: array
              nullable: true
              items:
                type: string
            status:
              type: array
              nullable: true
              items:
                type: string
                enum:
                  - new
                  - in_progress
                  - closed
                  - acknowledged
            resolution:
              type: array
              nullable: true
              items:
                type: string
        from:
          type: integer
          nullable: true
        limit:
          type: integer
          nullable: true
        offset:
          type: integer
          nullable: true
        sort:
          type: object
          properties:
            direction:
              type: string
              nullable: true
              enum:
                - asc
                - desc
            field:
              type: string
              nullable: true
        until:
          type: integer
          nullable: true
        update_time:
          type: integer
          nullable: true
    DetectionTicket:
      type: object
      properties:
        ticket_id:
          type: string
        assignee:
          type: string
          nullable: true
        status:
          type: string
          enum:
            - new
            - in_progress
            - closed
            - acknowledged
        resolution:
          type: string
          enum:
            - action_taken
            - no_action_taken
    Device:
      type: object
      properties:
        id:
          type: integer
        activity:
          type: array
          items:
            type: string
        analysis:
          type: string
          nullable: true
        analysis_level:
          type: integer
          nullable: true
        auto_role:
          type: string
          nullable: true
        cdp_name:
          type: string
          nullable: true
        cloud_account:
          type: string
          nullable: true
        cloud_instance_id:
          type: string
          nullable: true
        cloud_instance_name:
          type: string
          nullable: true
        cloud_instance_type:
          type: string
          nullable: true
        critical:
          type: boolean
          nullable: true
        custom_name:
          type: string
          nullable: true
        custom_type:
          type: string
          nullable: true
        default_name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        device_class:
          type: string
          nullable: true
        dhcp_name:
          type: string
          nullable: true
        discover_time:
          type: integer
        discovery_id:
          type: string
        display_name:
          type: string
          nullable: true
        dns_name:
          type: string
          nullable: true
        extrahop_id:
          type: string
        ipaddr4:
          type: string
          nullable: true
        ipaddr6:
          type: string
          nullable: true
        is_l3:
          type: boolean
        last_seen_time:
          type: integer
          nullable: true
        macaddr:
          type: string
          nullable: true
        mod_time:
          type: integer
        model:
          type: string
          nullable: true
        netbios_name:
          type: string
          nullable: true
        node_id:
          type: integer
        on_watchlist:
          type: boolean
        parent_id:
          type: integer
          nullable: true
        role:
          type: string
          nullable: true
        subnet_id:
          type: string
          nullable: true
        user_mod_time:
          type: integer
          nullable: true
        vendor:
          type: string
          nullable: true
        vlanid:
          type: integer
          nullable: true
        vpc_id:
          type: string
          nullable: true
    DeviceGroup:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        field:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        filter:
          type: array
          items:
            type: string
        built_in:
          type: boolean
        dynamic:
          type: boolean
        include_custom_devices:
          type: boolean
        mod_time:
          type: integer
    DeviceSearch:
      type: object
      properties:
        active_from:
          type: integer
          nullable: true
        active_until:
          type: integer
          nullable: true
        limit:
          type: integer
          nullable: true
        offset:
          type: integer
          nullable: true
        filter:
          type: object
          properties:
            field:
              type: string
              enum:
                - name
                - discovery_id
                - ipaddr
                - macaddr
                - vendor
                - tag
                - activity
                - node
                - vlan
                - discover_time
                - role
                - dns_name
                - dhcp_name
                - netbios_name
                - cdp_name
                - custom_name
                - software
                - model
                - is_critical
                - instance_id
                - instance_name
                - instance_type
                - cloud_account
                - vpc_id
                - subnet_id
                - is_active
            operator:
              type: string
              enum:
                - >
                - <
                - <=
                - '>='
                - =
                - '!='
                - startswith
                - and
                - or
                - not
                - exists
                - not_exists
                - ~
                - '!~'
            operand:
              type: string
            rules:
              type: array
              nullable: true
              items:
                type: string
    DnsName:
      type: object
      properties:
        dns_name:
          type: string
        last_observation_time:
          type: string
    DnsNameResponse:
      type: object
      properties:
        current_dns_names:
          type: array
          items:
            type: string
        dns_names:
          type: array
          items:
            $ref: '#/components/schemas/DnsName'
    IpAddress:
      type: object
      properties:
        ipaddr:
          type: string
        last_observation_time:
          type: integer
    IpAddressResponse:
      type: object
      properties:
        associated_ipaddrs:
          type: array
          items:
            type: string
        current_ipaddrs:
          type: array
          items:
            type: string
        ipaddrs:
          type: array
          items:
            $ref: '#/components/schemas/IpAddress'
    MetricRequest:
      type: object
      properties:
        cycle:
          type: string
          enum:
            - auto
            - 1sec
            - 30sec
            - 5min
            - 1hr
            - 24hr
        from:
          type: integer
        metric_category:
          type: string
        metric_specs:
          type: array
          items:
            $ref: '#/components/schemas/MetricSpec'
        object_ids:
          type: array
          items:
            type: integer
        object_type:
          type: string
          enum:
            - network
            - device
            - application
            - vlan
            - device_group
            - system
        until:
          type: integer
    MetricResponse:
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/MetricStats'
        cycle:
          type: string
        node_id:
          type: integer
        clock:
          type: integer
        from:
          type: integer
        until:
          type: integer
    MetricSpec:
      type: object
      properties:
        name:
          type: string
        key1:
          type: string
          nullable: true
        key2:
          type: string
          nullable: true
        calc_type:
          type: string
          nullable: true
          enum:
            - mean
            - percentiles
        percentiles:
          type: array
          nullable: true
          items:
            type: number
    MetricStats:
      type: object
      properties:
        oid:
          type: integer
        time:
          type: integer
        duration:
          type: integer
        values:
          type: array
          items:
            type: integer
    Network:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        appliance_uuid:
          type: string
          nullable: true
        idle:
          type: boolean
        node_id:
          type: integer
        mod_time:
          type: integer
    Software:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        software_type:
          type: string
          nullable: true
    Tag:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        name:
          type: string
        mod_time:
          type: integer
          nullable: true
    Trigger:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        apply_all:
          type: boolean
        author:
          type: string
        debug:
          type: boolean
        description:
          type: string
          nullable: true
        disabled:
          type: boolean
        event:
          type: string
          nullable: true
        events:
          type: array
          items:
            type: string
        hints:
          type: array
          items:
            $ref: '#/components/schemas/TriggerHint'
        mod_time:
          type: integer
          nullable: true
        name:
          type: string
        script:
          type: string
    TriggerHint:
      type: object
      properties:
        snaplen:
          type: integer
          nullable: true
        payloadBytes:
          type: integer
          nullable: true
        clipboardBytes:
          type: integer
          nullable: true
        cycle:
          type: string
          nullable: true
        metricTypes:
          type: string
          nullable: true
        flowPayloadTurn:
          type: boolean
        flowClientPortMin:
          type: integer
          nullable: true
        flowClientPortMax:
          type: integer
          nullable: true
        flowClientBytes:
          type: integer
          nullable: true
        flowClientString:
          type: string
          nullable: true
        flowServerPortMin:
          type: integer
          nullable: true
        flowServerPortMax:
          type: integer
          nullable: true
        flowServerBytes:
          type: integer
          nullable: true
        flowServerString:
          type: string
          nullable: true
        flowUdpAll:
          type: boolean
        fireClassifyOnExpiration:
          type: boolean
    Vlan:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        vlanid:
          type: integer
        network_id:
          type: integer
          nullable: true
        node_id:
          type: integer
          nullable: true
        mod_time:
          type: integer
          nullable: true
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth2/token
          scopes:
            auth: Authenticated endpoint